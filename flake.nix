# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.8)
{
  # A helpful description of your flake
  description = "nix based builds for dockerized dev tools";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*.tar.gz";
    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/0.1.*.tar.gz";
    fenix = {
      url = "github:nix-community/fenix";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  # Flake outputs that other flakes can use
  outputs = {
    self,
    flake-schemas,
    nixpkgs,
    fenix,
  }:
  let
    lib = import ./lib.nix;
  in {
    # Schemas tell Nix about the structure of your flake's outputs
    inherit (flake-schemas) schemas;

    inherit lib;

    packages = self.lib.forEachSupportedSystem {
      inherit nixpkgs;
      overlays = [
        (self.lib.fenixOverlay {inherit fenix;})
      ];
      f = {pkgs}:
        pkgs.callPackage ./images.nix {
          architecture = "amd64";
        };
    };

    formatter = self.lib.forEachSupportedSystem {
      inherit nixpkgs;
      f = {pkgs}: pkgs.alejandra;
    };

    # Development environments
    devShells = self.lib.forEachSupportedSystem {
      inherit nixpkgs;
      f = {pkgs}: {
        default = pkgs.mkShell {
          # Pinned packages available in the environment
          packages = with pkgs; [alejandra just];
        };
      };
    };
  };
}
